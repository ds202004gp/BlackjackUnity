@startuml
class TrumpController {
    + ResetCardsInfo() : void
    CreateCards() : void
    ShuffleCards() : void
    + DrawCard() : Card
    ConvertNumberForBlackjack(card:Card) : void
}
class Card {
    - number : int
    - suit : string
    + Number : int <<get>> <<set>>
    + Suit : string <<get>> <<set>>
    # Card(sprite:Sprite, number:int)
}
class Hart {
    + Hart(sprite:Sprite, number:int)
}
class Spade {
    + Spade(sprite:Sprite, number:int)
}
class Clover {
    + Clover(sprite:Sprite, number:int)
}
class Diamond {
    + Diamond(sprite:Sprite, number:int)
}
class "List`1"<T> {
}
class "Stack`1"<T> {
}
MonoBehaviour <|-- TrumpController
TrumpController --> "back" Sprite
TrumpController --> "Back" Sprite
TrumpController --> "orderCards<Card>" "List`1"
TrumpController --> "playingCards<Card>" "Stack`1"
Card --> "sprite" Sprite
Card --> "Sprite" Sprite
Card <|-- Hart
Card <|-- Spade
Card <|-- Clover
Card <|-- Diamond
@enduml
